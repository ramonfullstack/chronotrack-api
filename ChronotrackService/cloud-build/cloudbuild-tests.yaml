# cloudbuild.yaml

# Define o bucket para armazenar logs do build
logsBucket: "gs://meu-bucket-de-logs"

# Define a Service Account para o build
serviceAccount: "projects/ramon-prd/serviceAccounts/ramon-prd@ramon-prd.iam.gserviceaccount.com"

steps:
  # Etapa 1: Build da imagem Docker
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "us.gcr.io/$PROJECT_ID/${_SERVICE}:$SHORT_SHA"
      - "-f"
      - "cloud-build/Dockerfile"
      - "."
    dir: "${_FOLDER}"

  # Etapa 2: Push da imagem para o container registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "us.gcr.io/$PROJECT_ID/${_SERVICE}:$SHORT_SHA"

  # Etapa 3: Configuração das variáveis de ambiente para o deployment
  - name: "gcr.io/cloud-builders/kubectl"
    args:
      - "set"
      - "env"
      - "deployments/app-${_SERVICE}-deploy"
      - "ConnChronotrack=${_CONN_CHRONOTRACK}"
    env:
      - "CLOUDSDK_COMPUTE_REGION=southamerica-east1"
      - "CLOUDSDK_CONTAINER_CLUSTER=ramon-cluster"

  # Etapa 4: Configuração das variáveis de ambiente adicionais para o deployment
  - name: "gcr.io/cloud-builders/kubectl"
    args:
      - "set"
      - "env"
      - "deployments/app-${_SERVICE}-deploy"
      - "InstanceMysql=${_INSTANCE_MYSQL}"
      - "KeyMysql=${_KEY_MYSQL}"
      - "--containers=cloudsql-proxy"
    env:
      - "CLOUDSDK_COMPUTE_REGION=southamerica-east1"
      - "CLOUDSDK_CONTAINER_CLUSTER=ramon-cluster"

  # Etapa 5: Atualização da imagem no deployment do Kubernetes
  - name: "gcr.io/cloud-builders/kubectl"
    args:
      - "set"
      - "image"
      - "deployments/chronotrack-api-deploy"
      - "app-wise=us.gcr.io/ramon-prd/chronotrack-api:$TAG_NAME"
    env:
      - "CLOUDSDK_COMPUTE_REGION=southamerica-east1"
      - "CLOUDSDK_CONTAINER_CLUSTER=ramon-cluster"

# Opções de configuração do Cloud Build
options:
  logging: NONE  # Define para enviar logs para o Cloud Logging
